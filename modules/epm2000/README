Instructions for EPM2000  users                    Last Updated 03/31/2008
--------------------------------

Notes about GPIB vs. RS232: 
      RS232 was found to be faster and less of a load on the EPM2000 cpu. 
      GPIB was also found not to resync itself and RS232 did after communication 
      problems. Package is optimized for RS232 and was working up to 130Hz with 
      external triggers to the device. If the EPM2000 is triggered greater than 
      130Hz the IOC can not communicate with device and could  start reporting errors 
      and become out of syn, this can be helped by increasing the devices trigger hold off
      setting. 



I - Adding the epm2000 support to your IOC application:
-------------------------------------------------------

(1) Add Asyn and Stream device support to your IOC

(2) Add EPM2000 to configure/RELEASE and clean/rebuild configure:

EPM2000_MODULE_VERSION=epm2000-(version)

EPM2000=$(EPICS_MODULES)/epm2000/$(EPM2000_MODULE_VERSION)


(3) Create a EPM2000 substitution database file. See example file in 
    epm2000App/Db/epm2000example.substitutions

II - Adding EPM2000 support to your IOC startup file:
-----------------------------------------------

(1) Add your epm2000 database to st.cmd (before iocInit):

    dbLoadRecords("db/<filename>.db")

(2) Add Location of stream protocol files

   epicsEnvSet "STREAM_PROTOCOL_PATH", "${TOP}/db"

(3) Set up IOC/hardware links -- GPIB/LAN connection to Coherent EPM2000 device

    ## Set up IOC/hardware links -- GPIB/LAN connection
    #Coherent EPM2000:
    #vxi11Configure("bus0", "hostname", 0, 0.0, "gpib0", 0) # for GPIB
    drvAsynIPPortConfigure ("bus0","hostname:21(port)",0,0,0) # for RS232 via a terminal server


(4) Optional , Add asyn debugging
    ## Asyn messages
    #####Coherent EPM2000:
    #asynSetTraceMask("bus0",1,0x9)    #for debug
    #asynSetTraceIOMask("bus0",1,0x2)  #for debug
