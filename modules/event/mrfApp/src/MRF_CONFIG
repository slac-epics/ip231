#==============================================================================
# MRF_CONFIG
#
# Configuration file for building the MRF event system software libraries
# based on the site-specific information found in the MRF_CONFIG_SITE file(s).
#
# In general, this file should only be modified if the parameters in the 
# site-specific configuration configuration file(s) (MRF_CONFIG_SITE) are not
# adequate to build the software you need.
#
#------------------------------------------------------------------------------
# Author:   E.Bjorklund
# Date:     23 May 2006
#
#------------------------------------------------------------------------------
# Modification Log
# 23-May-2006   E.Bjorklund  Original Version
#
#==============================================================================


#-----------------------------------------------------------------------------#
#  Define some convenient constants                                           #
#-----------------------------------------------------------------------------#

empty :=
space := $(empty) $(empty)

#-----------------------------------------------------------------------------#
#  Get the default site-specific configuration parameters                     #
#-----------------------------------------------------------------------------#

include $(SOURCE_DIR)/MRF_CONFIG_SITE

#-----------------------------------------------------------------------------#
#  Get any architecture-specific configuration parameter overrides            #
#-----------------------------------------------------------------------------#

ifdef T_A
-include $(SOURCE_DIR)/MRF_CONFIG_SITE_$(T_A)
endif

#-----------------------------------------------------------------------------#
#  Determine how to probe CR/CSR space                                        #
#-----------------------------------------------------------------------------#

#=====================
# First check to see if the BSP and/or EPICS supports CR/CSR Adressing
#
ifeq ($(BSP_SUPPORTS_CRCSR),YES)
    ifeq ($(EPICS_SUPPORTS_CRCSR),YES)
        CRCSR_PROBE_NAME := vmeCSRMemProbeOSI
    else
        CRCSR_PROBE_NAME := vmeCSRMemProbeB
    endif

#=====================
# If the BSP does not support CR/CSR addressing, construct a probe
# routine based on the BSP specified in the BSP_SOURCE_PATH variable.
#
else
    CRCSR_PROBE_NAME := vmeCSRMemProbeA
    BSP_NAME := $(basename $(notdir $(BSP_SOURCE_PATH)))
    $(CRCSR_PROBE_NAME)_INCLUDES += -I$(BSP_SOURCE_PATH)
    $(CRCSR_PROBE_NAME)_INCLUDES += -I../os/$(OS_CLASS)

    ifneq ($(strip $(BSP_NAME)),)
        $(CRCSR_PROBE_NAME)_CFLAGS += -DBSP_$(BSP_NAME)
        $(CRCSR_PROBE_NAME)_CFLAGS += -DBSP_NAME="\"$(BSP_NAME)\""
    else
        $(CRCSR_PROBE_NAME)_CFLAGS += -DBSP_NAME="\"No BSP Specified\""
    endif

endif

#-----------------------------------------------------------------------------#
#  Set Basic IO Operations                                                    #
#-----------------------------------------------------------------------------#

ifeq ($(HAS_IOOPS_H),YES)
    USR_CPPFLAGS += -DHAS_IOOPS_H
endif

#-----------------------------------------------------------------------------#
#  Set the Event Clock Frequency                                              #
#-----------------------------------------------------------------------------#

ifneq ($(strip $(EVENT_CLOCK_SPEED)),)
    USR_CPPFLAGS += -DEVENT_CLOCK_SPEED=$(EVENT_CLOCK_SPEED)
endif

#-----------------------------------------------------------------------------#
#  Set the Event Clock Selection                                              #
#-----------------------------------------------------------------------------#

ifneq ($(strip $(EVENT_CLOCK_SELECT)),)
    USR_CPPFLAGS += -DEVENT_CLOCK_SELECT=$(EVENT_CLOCK_SELECT)
endif
