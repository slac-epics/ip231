This directory contains an example of an ca server. The example 
of the server exports process synchronous variables (PVs) that 
are included into initialization.

This server is based on the R3.14.0 beta version of the EPICS base.
Clients can use different version of the EPICS base.

This directory also includes simple program to read and write 
PVs.

To build the executables you should edit Makefile to define the
location of the EPICS header files and libraries, then type
>make

The executables will be created in the ./bin subdirectory.
sns_cas - the portable channel access server
readPV  - stand alone CA client that reads PV from CAS
writePV - stand alone CA client that writes PV to CAS

The following command will delete all executables and object 
files: 
> make clean 


The subdirectory ./examples includes shell scripts that
call sns_cas, readPV, and writePV and example of an input file
for the portable CAS. To use executables without scripts you 
have to define LD_LIBRARY_PATH to the EPICS library and EPICS
variables:
EPICS_CA_AUTO_ADDR_LIST
EPICS_CA_ADDR_LIST
EPICS_CA_SERVER_PORT

As example, see readPV.exe and writePV.exe in the ./examples
directory.

The sns_cas can be used without EPICS variables, because they 
can be defined in the input file, but the definition of the
LD_LIBRARY_PATH is still necessary.

============The parameters for CAS===========================
sns_cas [-d<debug level>] 
        [-t<execution time>] 
        [-f=<nameOfInpFile>] 
        [-fout=<nameOfOutPutFile>] 
        [-s<D>]                     

Where the parameters are

[-d<debug level>]    - debug level defining the amount of 
                       information printed on the terminal.

[-t<execution time>] - if do not run this CAS forever.

[-f=<nameOfInpFile>] - the file needed to initialize this CAS
                       with EPICS variables and PVs parameters.
 
[-fout=<OutPutFile>] - name of the output file with created PVs.
                       It can be used for control what PVs have
                       been created by the server.

[-s<D>]               - D=1 scan on, D=0 scan off (default)
