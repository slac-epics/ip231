#RELEASE Location of external products
#
# IF YOU MAKE ANY CHANGES to this file you MUST at least run
# "gnumake" in this directory afterwards; you usually need
# EPICS extensions main RELEASE file
#
# Host/target specific settings can be specified in files named
#  RELEASE.$(EPICS_HOST_ARCH).Common
#  RELEASE.Common.$(T_A)
#  RELEASE.$(EPICS_HOST_ARCH).$(T_A)

# Check that you specified the EPICS config file
ifndef EPICS_SITE_CONFIG
$(error EPICS_SITE_CONFIG undefined)
endif

# Site configuration, if it does not exist, no big deal
include $(EPICS_SITE_CONFIG)

# =================================================================
# Define EPICS_EXTENSIONS
# EPICS_BASE usually appears last so other apps can override stuff:
# =================================================================
EPICS_EXTENSIONS=$(EPICS_SITE_TOP)/extensions/$(EXTENSIONS_MODULE_VERSION)

# =================================================================
# Define EPICS_BASE
# EPICS_BASE usually appears last so other apps can override stuff:
# =================================================================
EPICS_BASE=$(EPICS_SITE_TOP)/base/$(BASE_MODULE_VERSION)

# =============================================================
# Define location of module tree with respect to
# EPICS_SITE_TOP
# =============================================================
EPICS_MODULES=$(EPICS_SITE_TOP)/modules

# ===============================================================
# Define the version of modules needed by
# IOC apps or other Support apps
# Make sure that you look at the website to discover
# the appropriate version dependencies
# http://www-group.slac.stanford.edu/cdsoft/epics/swModules3.htm
# ===============================================================
# NOTE: do not set unless you want to use a released version

# ============================================================
# External Support
# ============================================================
# example: IPAC=$(EPICS_MODULES)/ipac/$(IPAC_MODULE_VERSION)
# NOTE: it is normal for IPAC_MODULE_VERSION not to be defined, it will
# be inserted by the release script.

# ========================================================================================
#If using macro substitutions, point MSI at the binary:
# ========================================================================================

##########################################
# For the following definitions
# (MATLABDIR + SCILABDIR, that is)
# different methods can be used [we use
# XXX as a placeholder which could be any
# of MATLABDIR or SCILABDIR]:
#
# 1) if XXX is defined then it overrides
#    everything else
# 2) Architecture specific paths can be
#    given (e.g., because matlab for solaris
#    is installed in a different place from
#    matlab for linux on a file server):
#
#    XXX_<epics_host_arch> is used if not empty
#    else XXX_DEFAULT is used.
#
# Examples:
#
# MATLABDIR = /a/b/c  (use same MATLABDIR for everything)
#
# SCILABDIR_win32-x86 = C:\SCILAB           (use this on WIN32)
# SCILABDIR_DEFAULT   = /usr/lib/scilab-4.1 (use for everything else)
##########################################

##########################################
# Tell us where SCILAB is installed (only
# needed if MAKEFOR != MATLAB [in CONFIG])

#SCILABDIR=/usr/lib/scilab-4.1

#you can also use EPICS_HOST_ARCH - specific
#paths -- see above

##########################################
# Tell us where MATLAB is installed (only
# needed if MAKEFOR=MATLAB [in CONFIG])

MATLABDIR=${EXTERNAL_PACKAGES}/matlab

